@function str-replace($string, $search, $replace: '') {
    $index: str-index($string, $search);
    @if $index {
        @return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);
    }
    @return $string;
}

@mixin abs-pos($left: auto, $top: auto, $right: auto, $bottom: auto) {
    position: absolute;
    top: $top;
    left: $left;
    right: $right;
    bottom: $bottom;
}

@mixin transition($transitions...) {
    $str: null;
    @for $i from 1 through length($transitions) {
        $e: nth($transitions, $i);
        $str: if($i != length($transitions), $str#{$e}#{','}, $str#{$e});
    }
    $transitions: $str;
    -webkit-transition: str-replace($transitions, 'transform', '-webkit-transform');
    @if str-index($transitions, 'transform') {
        transition: str-replace($transitions, 'transform', '-ms-transform');
    }
    transition: $transitions;
}
@mixin transform($transform ...) {
    -webkit-transform: $transform;
    -ms-transform: $transform;
    transform: $transform;
}
@mixin transform-origin($transform-origin ...) {
    -webkit-transform-origin: $transform-origin;
    -ms-transform-origin: $transform-origin;
    transform-origin: $transform-origin;
}

.disable-select {
    -webkit-tap-highlight-color: rgba(0,0,0,0);
    -webkit-touch-callout: none;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
}

.clearfix:after {
    content:"";
    display:table;
    clear:both;
}

.no-js-hidden {
    display: none;
    visibility: hidden;
    .page_loaded & {
        display: block;
        visibility: visible;
    }
}

.preloader {
    width: 30px;
    height: 30px;
    border-radius: 50%;
    border: solid 2px $preloaderAlphaColor;
    border-top-color: $preloaderColor;
    border-left-color: $preloaderColor;
    -webkit-animation: spin 1s infinite linear;
    animation: spin 1s infinite linear;
}
@-webkit-keyframes spin {
    100% {
        @include transform(rotate(360deg));
    }
}
@keyframes spin {
    100% {
        @include transform(rotate(360deg));
    }
}

.commonForButtons {
    @extend .disable-select;
    @include transition(background 0.2s ease, color 0.2s ease, box-shadow 0.2s ease);
    border: 0 !important;
    box-shadow: 0 1px 3px rgba(0,0,0,.1),0 1px 2px rgba(0,0,0,.18) !important;
    -moz-appearance: none;
    -webkit-appearance: none;
    &:hover {
        box-shadow: 0 3px 6px rgba(0,0,0,.2),0 3px 6px rgba(0,0,0,.26) !important;
    }
    &:active {
        box-shadow: 0 8px 18px rgba(0,0,0,.22),0 6px 6px rgba(0,0,0,.26) !important;
    }
}

.simpleBtn {
    @extend .commonForButtons;
    background-color: $btnBgColor !important;
    border-radius: 3px;
    color: $btnTextColor !important;
    cursor: pointer;
    display: inline-block !important;
    font: inherit;
    font-size: 13px !important;
    text-align: center;
    text-shadow: none !important;
    text-decoration: none !important;
    vertical-align: middle !important;
    min-width: 80px;
    padding: 0 10px !important;
    height: $inputHeight;
    line-height: $inputHeight;
    white-space: nowrap;
    &:hover {
        background-color: $btnHoverBgColor !important;
    }
    &:active {
        background-color: $btnActiveBgColor !important;
    }
    &:disabled {
        background-color: $btnBgColor !important;
        color: $btnTextColor !important;
        cursor: default;
        opacity: .65 !important;
    }
}

.simpleBtnWhite {
    @extend .simpleBtn;
    color: $btnWhiteTextColor !important;
    background-color: $btnWhiteBgColor !important;
    &:hover {
        background-color: $btnWhiteBgColor !important;
    }
    &:active {
        background-color: $btnWhiteBgColor !important;
    }
    &:disabled {
        background-color: $btnWhiteBgColor !important;
        color: $btnWhiteTextColor !important;
    }
}
